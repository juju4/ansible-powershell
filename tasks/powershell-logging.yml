---

- name: Ensure rsyslog package is present
  ansible.builtin.package:
    name: rsyslog
    state: present
  register: pkg_result
  until: pkg_result is success

- name: RedHat
  when: ansible_os_family == "RedHat"
  block:
    - name: RedHat | Ensure /etc/rsyslog.d exists
      ansible.builtin.file:
        dest: /etc/rsyslog.d
        state: directory
        owner: root
        mode: '0755'
    - name: RedHat | Ensure rsyslog use rsyslog.d directory
      ansible.builtin.lineinfile:
        dest: /etc/rsyslog.conf
        regexp: '^\$IncludeConfig /etc/.*'
        line: '$IncludeConfig /etc/rsyslog.d/*.conf'
        mode: '0644'
        backup: "{{ powershell_backup | default(false) }}"
        validate: 'rsyslogd -N2 -f %s'
      notify:
        - Restart rsyslog

- name: Ensure logging directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ syslog_user | default('root') }}"
    mode: 0750
  loop:
    - /var/log/powershell
    - /var/log/powershell/transcription

- name: Configure rsyslog for powershell
  ansible.builtin.template:
    src: "rsyslog-40-powershell.conf.j2"
    dest: "/etc/rsyslog.d/40-powershell.conf"
    owner: root
    group: root
    mode: '0644'
    validate: 'rsyslogd -N2 -f %s'
    backup: "{{ powershell_backup | default(false) }}"
  notify:
    - Restart rsyslog

- name: Ensure logrotate package is present
  ansible.builtin.package:
    name: logrotate
    state: present
  register: pkg_result
  until: pkg_result is success

- name: Ensure logrotate.d directory exists
  ansible.builtin.file:
    dest: /etc/logrotate.d
    state: directory
    mode: '0755'

- name: Ensure powershell logs are rotated
  ansible.builtin.template:
    src: "logrotate-powershell.j2"
    dest: "/etc/logrotate.d/powershell"
    mode: '0644'
    backup: "{{ powershell_backup | default(false) }}"
    validate: 'logrotate -dv %s'

- name: Ensure cron is installed
  ansible.builtin.package:
    name: "{{ cron_pkg }}"
    state: present
  register: pkg_result
  until: pkg_result is success

- name: Add cron task to compress transcription logs
  ansible.builtin.cron:
    name: "compress transcription logs"
    minute: "15"
    hour: "1"
    day: "*"
    user: "root"
    job: "find /var/log/powershell/transcription/ -type f -mtime +{{ powershell_compress_older_transcriptions_days | int }} -exec gzip {} \\;"
    cron_file: ansible_compress_pwsh_transcriptions
